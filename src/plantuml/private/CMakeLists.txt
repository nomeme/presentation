
##
# Collect all of the Plantuml files in this folder.
##
file(GLOB PUML_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.puml)

add_custom_target(plantuml_private
    COMMENT "Create the plantuml files for private chapter."
)

##
# Declaring the executable as source file here
# makes sure that we only download this when it is not
# available.
##
target_sources(plantuml_private
    PRIVATE
        ${PLANTUML_EXECUTABLE}
)

##
# Adds a target to clean the plantuml output.
##
add_custom_target(plantuml_private_clean)

foreach(file ${PUML_FILES})
    message(STATUS ${file})
    ##
    # We run plantuml for each *.puml file in this folder.
    #
    # Attention, This is not smart enough to resolve internal
    # plantuml includes and may require a cleanup call first
    # for complex dependencies.
    ##
    get_filename_component(file_name ${file} NAME_WE)
    set(out_file ${CMAKE_CURRENT_BINARY_DIR}/${file_name}.svg)
    add_custom_command(
        OUTPUT ${out_file}
        COMMAND java -jar ${PLANTUML_EXECUTABLE} ${file} -tsvg -o ${CMAKE_CURRENT_BINARY_DIR}
        COMMENT "Run plantuml for ${file}"
        WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
        DEPENDS ${PLANTUML_EXECUTABLE}
        MAIN_DEPENDENCY ${file}
    )
    ##
    # This makes the command a dependency for the plantuml build.
    ##
    target_sources(plantuml_private
        PRIVATE
            ${CMAKE_CURRENT_BINARY_DIR}/${file_name}.svg
    )
    ##
    # Adds the possibility to clean the generated svg files.
    ##
    add_custom_command(TARGET plantuml_private_clean
        POST_BUILD
        COMMAND rm ${out_file}
        COMMENT "Remove ${file_name} generated by plantuml."
        WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
    )
endforeach(file ${PUML_FILES})

add_dependencies(plantuml
    plantuml_private
)

add_dependencies(plantuml_clean
    plantuml_private_clean
)

##
# Downloading plantuml executable.
# This downloads the GPL version of plantuml.
# Attention: This file is distributed under GPL license.
# Do not release or modify.
#
# Custom commands are resolved on a per folder basis.
# Therefore we can provide it twice but it will be executed once
# as it defines a single output file.
##
add_custom_command(
    OUTPUT ${PLANTUML_EXECUTABLE}
    COMMAND wget ${PLANTUML_BINARY_SOURCE} -O ${PLANTUML_EXECUTABLE}
    COMMENT "Download plantuml binaries."
    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
)

